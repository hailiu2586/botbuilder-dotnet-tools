{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "botId": {
            "type": "string"
        },
        "msiId": {
            "type": "string"
        },
        "rolloutName": {
            "type": "string"
        },
        "env": {
            "type": "array",
            "defaultValue": []
        },
        "namePrefix": {
            "type": "string",
            "defaultValue": "va-build-"
        },
        "uniqueSuffix": {
            "type": "string",
            "defaultValue": "[toLower(substring(uniqueString(resourceGroup().id, 'va-resources'), 0, 6))]"
        },
        "hosting": {
            "type": "object",
            "metadata": {
                "description": "outputs.hosting.value from deploying hosting.json"
            }
        }
    },
    "functions": [
        {
            "namespace": "utils",
            "members": {
                "baseName": {
                    "parameters": [
                        {
                            "name": "path",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[take(parameters('path'), lastIndexOf(parameters('path'), '.'))]"
                    }
                }
            }
        }
    ],
    "variables": {
        "location": "[resourceGroup().location]",
        "botBuildContainer": "[concat(parameters('namePrefix'), parameters('botId'), '-', parameters('uniqueSuffix'))]",
        "botBuilderId": "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('botBuildContainer'))]",
        "checkBuildStepName": "concat('checkBuildStep-', parameters('rolloutName'))]",
        "checkBuildStepId": "[resourceId('Microsoft.DeploymentManager/steps', variables('checkBuildStepName'))]",
        "botArtifactName": "[parameters('env').BOT_ARTIFACT]",
        "botAppZipPath": "[concat('artifacts/', utils.baseName(variables('botArtifactName')), '-built-', parameters('rolloutName')  ,'.zip')]",
        "commonEnv": [
                {
                    "name": "AZ_SUB_ID",
                    "value": "[subscription().subscriptionId]"
                },
                {
                    "name": "AZ_GROUP_NAME",
                    "value": "[resourceGroup().name]"
                },
                {
                    "name": "AZ_USER_ASSIGNED_IDENTITY",
                    "value": "[parameters('msiId')]"
                },
                {
                    "name": "BOT_ARTIFACT_SUFFIX",
                    "value": "[parameters('rolloutName')]"
                },
                {
                    "name": "BOT_NAME",
                    "value": "[parameters('botId')]"
                }
            ]
    },
    "resources": [
        {
            "name": "[variables('botBuildContainer')]",
            "comments": "container instance to run botbuild",
            "location": "[variables('location')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-10-01",
            "dependsOn": [],
            "properties": {
                "osType": "Linux",
                "containers":[
                    {
                        "name": "[concat('botbuild-', parameters('rolloutName'))]",
                        "properties": {
                            "image": "hailiu2586/botbuild:0.1.21",
                            "command": ["/scripts/cloud-build.sh"],
                            "environmentVariables": "[union(variables('commonEnv'), parameters('env'))]",
                            "resources": {
                                "requests": {
                                    "cpu": 2,
                                    "memoryInGB": 4
                                },
                                "limits": {
                                    "cpu": 2,
                                    "memoryInGB": 4
                                }
                            },
                            "ports": [
                                {
                                    "port": 80
                                },
                                {
                                    "port": 8080
                                }
                            ]
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "ipAddress": {
                    "type": "Public",
                    "dnsNameLabel": "[variables('botBuildContainer')]",
                    "ports": [
                        {
                            "protocol": "TCP",
                            "port": 80
                        },
                        {
                            "protocol": "TCP",
                            "port": 8080
                        }
                    ]
                }
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[parameters('msiId')]": {}
                }
            }
        },
        {
            "name": "[variables('checkBuildStepName')]",
            "comments": "wait for the ACI to finish the build out",
            "location": "[variables('location')]",
            "type": "Microsoft.DeploymentManager/steps",
            "apiVersion": "2019-11-01-preview",
            "dependsOn": [
                "[variables('botBuildContainer')]"
            ],
            "properties": {
                "stepType": "healthCheck",
                "attributes": {
                    "waitDuration": "PT1M",
                    "duration": "PT10M",
                    "healthyStateDuration": "PT1M",
                    "maxElasticDuration": "PT10M",
                    "type": "REST",
                    "properties": {
                        "healthChecks": [
                            {
                                "name": "buildCheck",
                                "request": {
                                    "method": "GET",
                                    "uri": "[concat(parameters('hosting').storageBlobEndpoint.value, variables('botAppZipPath'), '?', parameters('hosting').storageSasToken.value)]",
                                    "authentication": {
                                        "type": "ApiKey",
                                        "name": "X-Noop",
                                        "in": "Header",
                                        "value": "noop"
                                    }
                                },
                                "response": {
                                    "successStatusCodes": ["200"]
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.DeploymentManager/rollouts",
            "comments": "execute rollout",
            "apiVersion": "2018-09-01-preview",
            "name": "[parameters('rolloutName')]",
            "location": "[variables('location')]",
            "Identity": {
                "type": "userAssigned",
                "identityIds": [
                    "[variables('msiId')]"
                ]
            },
            "dependsOn": ["[variables('checkBuildStepName')]"],
            "properties": {
            "buildVersion": "1.0.0.0",
            "artifactSourceId": "[parameters('hosting').artifactId.value]",
            "targetServiceTopologyId": "[parameters('hosting').topologyId.value]",
            "stepGroups": [
                {
                    "name": "stepGroup1",
                    "preDeploymentSteps": [],
                    "deploymentTargetId": "[parameters('hosting').serviceUnitId.value]",
                    "postDeploymentSteps": [{
                        "stepId": "[variables('checkBuildStepId')]"
                    }]
                }
            ]}
        }
    ],
    "outputs": {

    }
}
